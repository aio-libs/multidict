"""
This type stub file was generated by cyright.
With some minor edits...
"""

from typing import Any, TypeVar

from multidict import MultiDict, MultiDictProxy, CIMultiDict, CIMultiDictProxy, istr

_T = TypeVar("_T")

class Cython_MultiDict(MultiDict[_T]):
    pass
class Cython_MultiDictProxy(MultiDictProxy[_T]):
    pass 
class Cython_CIMultiDict(CIMultiDict[_T]):
    pass
class Cython_CIMultiDictProxy(CIMultiDictProxy[_T]):
    pass

def multidict_create() -> MultiDict[_T]: ...
def cimultidict_create() -> CIMultiDict[_T]: ...
def multidictproxy_create(inner: object) -> MultiDictProxy[_T]: ...
def cimultidictproxy_create(inner: object) -> CIMultiDictProxy[_T]: ...
def multidict_add(md: MultiDict[_T]) -> None: ...
def multidict_update(md: MultiDict[_T], data: dict[str, Any]) -> None: ...
def multidict_copy(md: MultiDict[_T]) -> MultiDict[_T]: ...
def cimultidict_update(md: CIMultiDict[_T], data: dict[str, Any]) -> None: ...
def cimultidict_copy(md: CIMultiDict[_T]) -> CIMultiDict[_T]: ...
def istr_FromUnicode(data: str) -> istr: ...
def istr_check(data: object) -> bool: ...
def istr_checkexact(data: object) -> bool: ...

class istrsubcls(istr): ...
