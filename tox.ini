[tox]
minversion = 3.0.0
envlist = python

[testenv]
whitelist_externals =
    rm
deps =
    -U
    pip==18.1  # pyup: < 19
    -r requirements/dev.txt
commands =
    rm -rf .eggs/ multidict/*.so multidict/_multidict.c
    pytest {posargs}
usedevelop = True

passenv =
    CI
    TRAVIS
    TRAVIS_*
    APPVEYOR
    APPVEYOR_*
    CIRCLECI
    CIRCLE_*
    MULTIDICT_NO_EXTENSIONS
setenv =
    PYTHONDONTWRITEBYTECODE=x

[testenv:profile-dev]
setenv =
    {[testenv]setenv}
    PROFILE_BUILD=x

[testenv:watch]
deps =
    {[testenv]deps}
    pytest-testmon==0.9.18
    pytest-watch==4.2.0
commands = ptw --runner=pytest -- --testmon

[testenv:codecov]
skipsdist = True
skip_install = True
deps = codecov==2.0.15
commands = codecov -f coverage.xml -X gcov

[testenv:flake8]
skipsdist = True
skip_install = True
deps = flake8==3.7.8
commands = flake8 multidict tests

[testenv:mypy]
skipsdist = True
skip_install = True
deps =
    mypy==0.720
commands = mypy multidict tests

[testenv:manylinux1]
whitelist_externals =
    bash
skipsdist = True
skip_install = True
deps =
commands = bash tools/run_docker.sh "multidict"

[testenv:doc-spelling]
whitelist_externals =
    make
skipsdist = True
skip_install = True
deps =
    -r requirements/doc.txt
commands = make -C docs spelling

[testenv:doc-html]
skipsdist = True
skip_install = True
whitelist_externals =
    make
deps =
commands = make -C docs html

[testenv:pre-commit]
skipsdist = True
skip_install = True
deps = pre-commit==1.17.0
commands = pre-commit run --all-files {posargs}

[testenv:pre-commit-pep257]
skipsdist = True
skip_install = True
deps = pre-commit==1.17.0
commands =
    pre-commit run --config .pre-commit-config.yaml.pep257 --all-files {posargs}

[testenv:setup-check]
skipsdist = True
skip_install = True
deps = docutils==0.15
commands =
    python -m setup check --metadata --restructuredtext --strict --verbose

[testenv:build-sdist]
skipsdist = True
skip_install = True
deps =
    -U
    cython==0.29.12
    setuptools==41.0.1
    wheel==0.33.4
commands =
    python -m setup sdist

[testenv:build-dists]
skipsdist = True
skip_install = True
deps =
    {[testenv:build-sdist]deps}
commands =
    {[testenv:build-sdist]commands} bdist_wheel

[testenv:build-macos-dists]
skipsdist = True
skip_install = True
deps =
    {[testenv:build-dists]deps}
commands =
    {[testenv:build-dists]commands} --plat-tag-chunk-num=6 --plat-tag-chunk-pos=1
    {[testenv:build-dists]commands} --plat-tag-chunk-num=6 --plat-tag-chunk-pos=2
    {[testenv:build-dists]commands} --plat-tag-chunk-num=6 --plat-tag-chunk-pos=3

[testenv:upload-dists]
skipsdist = True
skip_install = True
deps =
    -U
    twine==1.13.0
commands =
    python -m twine upload dist/* --username "{env:PYPI_USERNAME:aio-libs-bot}" --password "{env:PYPI_PASSWORD}" --skip-existing
