version: "= 0"

conditions: v1

sudo: false

language: python

python:
- 3.4
- 3.5
- &mainstream_python 3.6
- 3.6-dev
- nightly

install: &default_install
- python -m pip install -U tox
- python -m tox --notest  # Pre-populate a virtualenv with dependencies

script: &default_script
- python -m tox

after_success:
- python -m tox -e codecov

env:
  matrix:
  # MULTIDICT_NO_EXTENSIONS environment variables
  # are considered as enabled if they are any non-empty strings.
  - tests with extensions enabled <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <-=
  - MULTIDICT_NO_EXTENSIONS=X

_helpers:
- &_mainstream_python_base
  python: *mainstream_python
- &_reset_steps
  env: []
  before_install: skip
  install: skip
  script: skip
  after_success: []
- &_lint_base
  stage: &doc_stage_name docs, linting and pre-test checks
  <<: *_mainstream_python_base
  <<: *_reset_steps
  install: *default_install
  script: *default_script
- &_doc_base
  <<: *_lint_base
  install: *default_install
  after_failure: cat docs/_build/spelling/output.txt
  addons:
    apt:
      packages:
      - libenchant-dev
- &osx_python_base
  stage: &stage_test_osx_name test under OS X (last chance to fail before deploy available)
  os: osx
  language: generic
  python: &pypy3 pypy3.5-5.10.0
  env:
  - &env_pypy3 PYTHON_VERSION=pypy3.5-5.10.0
  - &env_pyenv PYENV_ROOT="$HOME/.pyenv"
  - &env_path PATH="$PYENV_ROOT/bin:$PATH"
  before_install:
  - brew update
  - brew install pyenv || brew upgrade pyenv
  - &ensure_pyenv_preloaded |
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
  - &install_python pyenv install --skip-existing --keep --verbose "$PYTHON_VERSION"
  - &switch_python pyenv shell "$PYTHON_VERSION"
  - &python_version python --version
  before_cache:
  - brew --cache
- &generic_deploy_base
  stage: &deploy_stage_name deploy (PYPI upload itself runs only for tagged commits)
  <<: *_mainstream_python_base
  deploy: &deploy_step
    provider: pypi
    # `skip_cleanup: true` is required to preserve binary wheels, built
    # inside of manylinux1 docker container during `script` step above.
    skip_cleanup: true
    user: aio-libs-bot
    password:
      secure: TVfWbgKAtYbj5MDQnif0cbKUN7GVgckXAmRZ2tHW4ikh/rEkpOTVqPGUlidPNHay72za1ndCQf0TWiffq5vRnFI35Trt4h3LqgJ6xJUJpnTmmWW20ahFFEoWn7WulTmOyT9WxWsSSnRmecrttARhG2Iz+Kyz1OcdnfC0aHIIf7ffOpigrdm5ES1kM2wKLNxRK/oAw8OHBAy1rrKMlws2KFApwQYJEZ2rjHNXufZn861VCNu6Kflf3HysUQKKoxeHfH7XNtwle980A6w7z7w69B+1gEBHyB7WSSiLM3f/nTknP2qVR79ekf9rgzzpg/AoLYB8z9H2MrELrxChHW+O244y/QBbUAvEsxO57Snc5NvvqKH/1SUMsQMYK/RgGjIq3mh9buFu0VeSMPy7EiuKAGgDAU2G9C0a6fo0Q6v9/EOfBD7yrrZheCTp2/ViMIb7ImsDgKZZtIu3yZNA7HkjI4vaZm0uf7sPVbI0xA9MvWYP4WVxYJWmBB37Jc0JyCz+jEgTJ1wVcab1152Q7S+VdvSqjwS5b9oXtpdhl28N/HV/AZaLk/qAM8djfAUBX+4SrltkkLaVpfUOCLxbRTmI4MjKsOWUu+e6sTNdqQZIIn6XsMXxIeX5kRfAuvOrro5wRgc3bAkT19qfVqm39Re+4GMarbcs0WgkToI/8EQ6zRQ=
    # Although Travis CI instructs `setup.py` to build source distribution,
    # which is default value for distribution option (`distribution: sdist`),
    # it will also upload all wheels we've previously built in manylinux1
    # docker container using `twine upload -r pypi dist/*` command.
    # Also since commit https://github.com/travis-ci/dpl/commit/90b5e39
    # it is default that Travis PYPI provider has `skip_upload_docs: true`
    # set by default.
    # Besides above, we don't do cleanup of `dist/*`, because it's being done
    # by Travis CI PYPI deployment provider after upload, unconditionally.
    on:
      tags: true
      all_branches: true
- &osx_pypi_deploy_base_1011
  <<: *osx_python_base
  <<: *generic_deploy_base
  osx_image: xcode7.3
  script: skip
  after_success: []
  env:
  - &env_os1011_msg Build and deploy to PYPI of OS X 10.11 binary wheel=
  - &env_py36 PYTHON_VERSION=3.6.1
  - *env_pyenv
  - *env_path
  deploy:
    <<: *deploy_step
    skip_cleanup: false
    distributions: bdist_wheel
- &osx_pypi_deploy_base_1012
  <<: *osx_pypi_deploy_base_1011
  osx_image: xcode8.1
  env:
  - &env_os1012_msg Build and deploy to PYPI of OS X 10.12 binary wheel=
  - *env_py36
  - *env_pyenv
  - *env_path
- &osx_pypi_deploy_base_1010
  <<: *osx_pypi_deploy_base_1011
  osx_image: xcode6.4
  env:
  - &env_os1010_msg Build and deploy to PYPI of OS X 10.10 binary wheel=
  - *env_py36
  - *env_pyenv
  - *env_path
- &linux_py37
  python: 3.7
  dist: xenial
  sudo: required

os: linux

jobs:
  fast_finish: true
  allow_failures:
  - os: osx
    python: nightly

  include:
  - <<: *linux_py37
    env:
      tests with extensions enabled <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <-:

  - <<: *linux_py37
    env:
      MULTIDICT_NO_EXTENSIONS: X

  - python: *pypy3
    env:
    - MULTIDICT_NO_EXTENSIONS=X

  - <<: *_doc_base
    env:
    - docs <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- =
    - TOXENV=doc-spelling

  - <<: *_lint_base
    env:
    - pre-commit <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- =
    - TOXENV=pre-commit

  - <<: *_lint_base
    env:
    - mypy <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- =
    - TOXENV=mypy

  - <<: *_lint_base
    env:
    - dist setup check <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- <- =
    - TOXENV=setup-check

  - <<: *osx_python_base
    python: 3.4
    env:
    - &env_py34 PYTHON_VERSION=3.4.6
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: 3.5
    env:
    - &env_py35 PYTHON_VERSION=3.5.3
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: *mainstream_python
    env:
    - *env_py36
    - *env_pyenv
    - *env_path
  - <<: *osx_python_base
    python: 3.7.0
    env:
    - PYTHON_VERSION=3.7.0
    - *env_pyenv
    - *env_path
  # pypy3.5-5.10.0 fails under OS X because it's unsupported

  # Build and deploy manylinux1 binary wheels and source distribution
  - <<: *generic_deploy_base
    <<: *_reset_steps
    env:
    - Build and deploy to PYPI of manylinux1 binary wheels for all supported Pythons and source distribution=
    - TOXENV=manylinux1
    dist: trusty
    group: edge
    services:
    - docker

    # Build and deploy MacOS binary wheels for each OSX+Python combo possible
    # OS X 10.10, Python 3.4
  - <<: *osx_pypi_deploy_base_1010
    python: 3.4
    env:
    - *env_os1010_msg
    - *env_py34
    - *env_pyenv
    - *env_path
    # OS X 10.10, Python 3.5
  - <<: *osx_pypi_deploy_base_1010
    python: 3.5
    env:
    - *env_os1010_msg
    - *env_py35
    - *env_pyenv
    - *env_path
    # OS X 10.10, Python 3.6
  - <<: *osx_pypi_deploy_base_1010
    env:
    - *env_os1010_msg
    - *env_py36
    - *env_pyenv
    - *env_path
    # OS X 10.10, Python 3.7
  - <<: *osx_pypi_deploy_base_1010
    env:
    - *env_os1010_msg
    - &env_py37 PYTHON_VERSION=3.7.0
    - *env_pyenv
    - *env_path
    # OS X 10.11, Python 3.4
  - <<: *osx_pypi_deploy_base_1011
    python: 3.4
    env:
    - *env_os1011_msg
    - *env_py34
    - *env_pyenv
    - *env_path
    # OS X 10.11, Python 3.5
  - <<: *osx_pypi_deploy_base_1011
    python: 3.5
    env:
    - *env_os1011_msg
    - *env_py35
    - *env_pyenv
    - *env_path
    # OS X 10.11, Python 3.6
  - <<: *osx_pypi_deploy_base_1011
    env:
    - *env_os1011_msg
    - *env_py36
    - *env_pyenv
    - *env_path
    # OS X 10.11, Python 3.7
  - <<: *osx_pypi_deploy_base_1011
    env:
    - *env_os1011_msg
    - *env_py37
    - *env_pyenv
    - *env_path
    # OS X 10.12, Python 3.4
  - <<: *osx_pypi_deploy_base_1012
    python: 3.4
    env:
    - *env_os1012_msg
    - *env_py34
    - *env_pyenv
    - *env_path
    # OS X 10.12, Python 3.5
  - <<: *osx_pypi_deploy_base_1012
    python: 3.5
    env:
    - *env_os1012_msg
    - *env_py35
    - *env_pyenv
    - *env_path
    # OS X 10.12, Python 3.6
  - <<: *osx_pypi_deploy_base_1012
    env:
    - *env_os1012_msg
    - *env_py36
    - *env_pyenv
    - *env_path
    # OS X 10.12, Python 3.7
  - <<: *osx_pypi_deploy_base_1012
    env:
    - *env_os1012_msg
    - *env_py37
    - *env_pyenv
    - *env_path

stages:
- *doc_stage_name
- test
- name: *stage_test_osx_name
  if: type IN (api, cron)
- name: *deploy_stage_name
  # This will prevent deploy unless it's a tagged commit:
  if: tag IS present


cache: pip

before_cache:
- rm -f $HOME/.cache/pip/log/debug.log
