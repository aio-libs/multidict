---

name: Build wheel

on:
  workflow_call:
    inputs:
      dists-artifact-name:
        description: Workflow artifact name containing dists
        required: true
        type: string
      os:
        description: VM OS to use, without version suffix
        default: ubuntu
        required: false
        type: string
      qemu:
        description: Emulated QEMU architecture
        default: ''
        required: false
        type: string
      tag:
        description: Build platform tag wheels
        default: ''
        required: false
        type: string
      source-tarball-name:
        description: Sdist filename wildcard
        required: true
        type: string
      wheel-tags-to-skip:
        description: Wheel tags to skip building
        default: ''
        required: false
        type: string

env:
  FORCE_COLOR: "1"  # Make tools pretty.
  PIP_DISABLE_PIP_VERSION_CHECK: "1"
  PIP_NO_PYTHON_VERSION_WARNING: "1"

jobs:

  build-wheel:
    name: >-
      Build ${{ inputs.tag }} wheels on ${{ inputs.os }} ${{ inputs.qemu }}
    runs-on: ${{
        inputs.os == 'windows-11-arm' && inputs.os ||
        format('{0}-latest', inputs.os)
      }}
    timeout-minutes: ${{ inputs.qemu && 120 || 15 }}
    steps:
    - name: Compute GHA artifact name ending
      id: gha-artifact-name
      run: |
        from hashlib import sha512
        from os import environ
        from pathlib import Path
        FILE_APPEND_MODE = 'a'
        inputs_json_str = """${{ toJSON(inputs) }}"""
        hash = sha512(inputs_json_str.encode()).hexdigest()
        with Path(environ['GITHUB_OUTPUT']).open(
                mode=FILE_APPEND_MODE,
        ) as outputs_file:
            print(f'hash={hash}', file=outputs_file)
      shell: python

    - name: Retrieve the project source from an sdist inside the GHA artifact
      uses: re-actors/checkout-python-sdist@release/v2
      with:
        source-tarball-name: ${{ inputs.source-tarball-name }}
        workflow-artifact-name: ${{ inputs.dists-artifact-name }}

    - name: Set up QEMU
      if: inputs.qemu
      uses: docker/setup-qemu-action@v3
      with:
        platforms: all
      id: qemu
    - name: Prepare emulation
      if: inputs.qemu
      run: |
        # Build emulated architectures only if QEMU is set,
        # use default "auto" otherwise
        echo "CIBW_ARCHS_LINUX=${{ inputs.qemu }}" >> "${GITHUB_ENV}"
      shell: bash

    - name: Skip building some wheel tags
      if: inputs.wheel-tags-to-skip
      run: |
        echo "CIBW_SKIP=${{ inputs.wheel-tags-to-skip }}" >> "${GITHUB_ENV}"
      shell: bash

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.23.3
      env:
        CIBW_ARCHS_MACOS: x86_64 arm64 universal2

    - name: Upload built artifacts for testing and publishing
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.dists-artifact-name }}-
           ${{ inputs.os }}-
           ${{ inputs.qemu }}-
           ${{ inputs.tag }}-
           ${{ steps.gha-artifact-name.outputs.hash }}
        path: ./wheelhouse/*.whl

...
